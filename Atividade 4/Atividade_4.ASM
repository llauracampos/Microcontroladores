;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                      MARÇO DE 2021                              *
;*                 BASEADO NO EXEMPLO DO LIVRO                     *
;*           Desbravando o PIC. David José de Souza                *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES
		DELAY_1
		DELAY_2
		FLAG_GP0
		FLAG_GP1
		FLAG_GP2

		;COLOQUE AQUI SUAS NOVAS VARIÁVEIS
		;NÃO ESQUEÇA COMENTÁRIOS ESCLARECEDORES

	ENDC			;FIM DO BLOCO DE DEFINIÇÃO DE VARIÁVEIS

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÃO ESCRITAS AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES
	
	BTFSC	GPIO, GP0 ; É TESTADO SE A PORTA QUE OCASIONOU A INTERUPÇÃO FOI O GP0.
	GOTO	TRATAMENTO_GP0 ; CASO TENHA SIDO, É ENCAMINHADO PARA O ACIONAMENTO DA FLAG REFERENTE A ESSA PORTA.
	BTFSC	GPIO, GP1 ; É TESTADO SE A PORTA QUE OCASIONOU A INTERUPÇÃO FOI O GP1.
	GOTO	TRATAMENTO_GP1 ; CASO TENHA SIDO, É ENCAMINHADO PARA O ACIONAMENTO DA FLAG REFERENTE A ESSA PORTA.
	BTFSC	GPIO, GP2 ; É TESTADO SE A PORTA QUE OCASIONOU A INTERUPÇÃO FOI O GP2.
	GOTO	TRATAMENTO_GP2 ; CASO TENHA SIDO, É ENCAMINHADO PARA O ACIONAMENTO DA FLAG REFERENTE A ESSA PORTA.
	GOTO	TRATAMENTO_ZERO ; CASO NENHUMA DAS PORTAS TENHA SIDO COLOCADA EM 1, ISSO INDICA QUE A INTERRUPÇÃO
	; FOI OCASIONADA PELO DESLIGAMENTO DE UMA DAS PORTAS, LOGO SERÁ ENCAMINHADO PARA A LABEL QUE ZERA AS FLAGS 
	; DAS PORTAS.
	
TRATAMENTO_GP0 ; NESSA LABEL A FLAG DO GP0 SERÁ COLOCADA EM 1 E, CONSEQUENTEMENTE, AS FLAGS DE GP1 E GP2 ESTRÃO EM 0.
	MOVLW	.1
	MOVWF	FLAG_GP0
	MOVLW	.0
	MOVWF	FLAG_GP1
	MOVWF	FLAG_GP2
	BCF	INTCON, GPIF ; TAMBÉM É LIMPA A FLAG DE INTERRUPÇÃO PELAS PORTAS, PARA QUE POSSA SER GERADA UMA NOVA INTERRUPÇÃO.
	GOTO	SAI_INT

TRATAMENTO_GP1 ; NESSA LABEL A FLAG DO GP1 SERÁ COLOCADA EM 1 E, CONSEQUENTEMENTE, AS FLAGS DE GP0 E GP2 ESTRÃO EM 0.
	MOVLW	.1
	MOVWF	FLAG_GP1
	MOVLW	.0
	MOVWF	FLAG_GP0
	MOVWF	FLAG_GP2
	BCF	INTCON, GPIF ; TAMBÉM É LIMPA A FLAG DE INTERRUPÇÃO PELAS PORTAS, PARA QUE POSSA SER GERADA UMA NOVA INTERRUPÇÃO.
	GOTO	SAI_INT

TRATAMENTO_GP2 ; NESSA LABEL A FLAG DO GP2 SERÁ COLOCADA EM 1 E, CONSEQUENTEMENTE, AS FLAGS DE GP0 E GP1 ESTRÃO EM 0.
	MOVLW	.1
	MOVWF	FLAG_GP2
	MOVLW	.0
	MOVWF	FLAG_GP0
	MOVWF	FLAG_GP1
	BCF	INTCON, GPIF ; TAMBÉM É LIMPA A FLAG DE INTERRUPÇÃO PELAS PORTAS, PARA QUE POSSA SER GERADA UMA NOVA INTERRUPÇÃO.
	GOTO	SAI_INT

TRATAMENTO_ZERO ; NESSA LABEL, AS FLAGS DAS TRÊS PORTAS SERÃO COLOCADAS EM ZERO.
	MOVLW	.0
	MOVWF	FLAG_GP0
	MOVWF	FLAG_GP1
	MOVWF	FLAG_GP2
	BCF	INTCON, GPIF ; TAMBÉM É LIMPA A FLAG DE INTERRUPÇÃO PELAS PORTAS, PARA QUE POSSA SER GERADA UMA NOVA INTERRUPÇÃO.
	GOTO	SAI_INT


	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.



	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00000111' ;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS)
	MOVWF	TRISIO		;COMO SAÍDAS
	CLRF	ANSEL 		;DEFINE PORTAS COMO Digital I/O
	MOVLW	B'00000111'
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO
	MOVLW	B'11001000'
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES
	MOVLW	B'00000111'
	MOVWF	IOC
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000111'
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO


;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;********************************************************************************
;* NO INÍCIO DO PROGRAMA, É VERIFICADO SE ALGUMA DAS FLAGS CRIADAS PARA INDICAR *
;* QUE UMA PORTA FOI ACIONADA ESTÁ EM 1, E ENTÃO ENCAMINHAR O PROGRAMA PARA     *
;* ACENDER O LED DA PORTA CORRESPONDENTE. AS FLAGS CITADAS SÃO ALTERADAS NO     *
;* TRATAMENTO DA INTERRUPÇÃO OCASIONADA PELO ACIONAMENTO DO PINO. QUANDO O      *
;* PROGRAMA SAI DA INTERRUPÇÃO, ELE RETORNA PARA A MAIN QUE ENCAMINHARÁ PARA A  *
;* LABEL DO LED INDICADO. A MAIN FUNCIONARÁ EM LOOP, ENQUANTO NENHUMA DAS FLAGS *
;* ESTEJA EM 1, OU SEJA, ENQUANTO TODOS OS BOTÕES ESTIVEREM DESLIGADOS.		*
;********************************************************************************		

MAIN	
	MOVLW	.1 
	SUBWF	FLAG_GP0, W ; É VERIFICADO SE A FLAG DO GP0 ESTÁ EM 1, OU SEJA, SE ELE FOI ACIONADO.
	BTFSC	STATUS, Z 
	GOTO	ALERTA_LIGA ; CASO TENHA SIDO ACIONADO, O PROGRAMA SERÁ ENCAMINHADO PARA A LABEL DE ACIONAMENTO DO PISCA ALERTA.
	MOVLW	.1
	SUBWF	FLAG_GP1, W ; É VERIFICADO SE A FLAG DO GP1 ESTÁ EM 1, OU SEJA, SE ELE FOI ACIONADO.
	BTFSC	STATUS, Z 
	GOTO	LED_E_LIGA ; CASO TENHA SIDO ACIONADO, O PROGRAMA SERÁ ENCAMINHADO PARA A LABEL DE ACIONAMENTO DO LED ESQUERDO.
	MOVLW	.1
	SUBWF	FLAG_GP2, W ; É VERIFICADO SE A FLAG DO GP2 ESTÁ EM 1, OU SEJA, SE ELE FOI ACIONADO.
	BTFSC	STATUS, Z 
	GOTO	LED_D_LIGA ; CASO TENHA SIDO ACIONADO, O PROGRAMA SERÁ ENCAMINHADO PARA A LABEL DE ACIONAMENTO DO LED DIREITO.
	GOTO	MAIN ; CASO NENHUMA DAS FLAGS ESTEJA EM 1, O PROGRAMA REPETIRÁ ESSE LAÇO E FARÁ A VERIFICAÇÃO NOVAMENTE, 
	; ATÉ QUE UMA PORTA SEJA ACIONADA.

;************************************************************************************
;* AS FUNÇÕES ALERTA, LED ESQUERDO E LED DIREITO POSSUEM LABELS PARA DETERMINAR     *
;* QUANDO ESTARÃO EM "HIGH" E QUANDO ESTARÃO EM "LOW", DE ACORDO COM A FREQUÊNCIA   *
;* DETERMINADA. ASSIM COMO NO SISTEMA DE FUNCIONAMENTO DE UM CARRO, QUANDO É        *
;* ACIONADO UM BOTÃO QUE ATIVA QUALQUER UMA DESSAS FUNÇÕES, O LED PERMANECERÁ       *
;* PISCANDO ATÉ QUE O BOTÃO SEJA DESACIONADO. O ÚNICO BOTÃO QUE PODE SER ACIONADO   *
;* ENQUANTO O ANTERIOR AINTA ESTÁ LIGADO, É O GPO, QUE ACIONA O ALERTA, POIS ESTE   *
;* POSSUI PRIORIDADE.                                                               *
;* COMO NO FUNCIONAMENTO DE UM CARRO, DOIS BOTÕES NÃO PODEM SER ACIONADOS           *          
;* SIMULTANEAMENTE, LOGO, PARA ATIVAR OUTRO BOTÃO QUANDO JÁ EXISTE UM ACIONADO,     *    
;* É NECESSÁRIO DESLIGAR O ANTERIOR PRIMEIRO. AS LABELS A SEGUIR REPRESENTAM OS     *     
;* LOOPS REALIZADOS PARA QUE OS LEDS PERMANECAM PISCANDO, DE ACORDO COM A SUA       *    
;* FUNÇÃO, ENQUANTO O SEU BOTÃO CORRESPONDENTE ESTIVER ACIONADO.                    *        
;************************************************************************************
	
ALERTA_LIGA ; LABEL QUE ESTABELECE O LOOP DO PISCA ALERTA, DETERMIANDO A PARTE DO PULSO QUE FICARÁ EM "HIGH".
	BSF	GPIO, GP4 ; COMO NA FUNÇÃO DE ALERTA OS DOIS LEDS PERMANECEM PISCANDO, AMBAS AS SAÍDAS,
	BSF	GPIO, GP5   ; GP4 E GP5 SÃO COLOCADAS EM 1.
	CALL	DELAY_500MS ; APÓS LIGAR OS LEDS, É CHAMADA A ROTINA DE DELAY QUE DETERMINA A FREQUÊBCIA EM QUE O LED ESTÁ OPERANDO.
	GOTO	TESTE_LIGA_GP0 ; APÓS CHAMAR A PRIMEIRA ROTINA DE DELAY, É ENCAMINHADO PARA A SEÇÃO DE TESTES PARA VERIFICAR SE OCORREU OUTRA REQUISIÇÃO DE AÇÃO,
	GOTO	ALERTA_DESLIGA ; OU SEJA, SE OUTRO BOTÃO FOI ACIONADO OU SE O ATUAL FOI DESABILITADO. CASO NENHUMA DESSAS AÇÕES TENHA OCORRIDO, SERÁ REALIZADA A PARTE SEGUINTE DO PULSO.
	
ALERTA_DESLIGA ; LABEL QUE ESTABELECE O LOOP DO PISCA ALERTA, DETERMIANDO A PARTE DO PULSO QUE FICARÁ EM "LOW".
	BCF	GPIO, GP4 ; ESSA LABEL DESCREVE O ESTADO "LOW" DO PULSO DO LED NA FREQUÊNCIA SOLICITADA, LOGO
	BCF	GPIO, GP5 ; AMBOS OS LEDS SÃO APAGADOS.
	CALL	DELAY_500MS ; NOVAMENTE É CHAMADA A ROTINA DE DELAY, PARA QUE O PULSO PERMANEÇA NESSE ESTADO PELO PERÍODO DETERMINADO.
	GOTO	TESTE_DESLIGA_GP0 ; APÓS O DELAY É VERIFICADO NOVAMENTE SE HOUVE OUTRA REQUISIÇÃO.
	GOTO	ALERTA_LIGA ; CASO NÃO HAJA, O LED SERA ACESO NOVAMENTE E O LOOP SERÁ REINICIADO. O LED PERMANECERÁ PISCANDO ATÉ QUE
	; HAJA UMA ALTERAÇÃO POR ESTÍMULO ESTERNO.
	
LED_E_LIGA ; LABEL QUE ESTABELECE O LOOP DO LED ESQUERDO, DETERMIANDO A PARTE DO PULSO QUE FICARÁ EM "HIGH".
	BSF	GPIO, GP4 ; ESTA LABEL OCORRE DE FORMA IDÊNTICA A LABEL "ALERTA_LIGA", CONTUDO APENAS O LED ESQUERDO É LIGADO.
	CALL	DELAY_500MS ; É CHAMADA A ROTINA DE DELAY PARA A PERMANÊNCIA DO LED ACESO.
	GOTO	TESTE_LIGA_GP1 ; É CHAMADO O TESTE PARA VERIFICAR SE HOUVERAM REQUISIÇÕES DE OUTRAS PORTAS.
	GOTO	LED_E_DESLIGA ; CASO NÃO HAJA, O LED PODERÁ SER DESLIGASO NA PRÓXIMA LABEL.
LED_E_DESLIGA ; LABEL QUE ESTABELECE O LOOP DO LED ESQUERDO, DETERMIANDO A PARTE DO PULSO QUE FICARÁ EM "LOW".
	BCF	GPIO, GP4 ; OCORRE DE MANEIRA IDÊNTICA AO ALERTA_DESLIGA, CONTUDO APENAS O LED ESQUERDO SERÁ APAGADO.
	CALL	DELAY_500MS ; É CHAMADA A ROTINA DE DELAY PARA A PERMANÊNCIA DO LED ACESO.
	GOTO	TESTE_DESLIGA_GP1 ; É CHAMADO O TESTE PARA VERIFICAR SE HOUVERAM REQUISIÇÕES DE OUTRAS PORTAS.
	GOTO	LED_E_LIGA ; CASO NÃO HAJA, VOLTARÁ PARA A LABEL ANTERIOR PARA QUE O LED FIQUE PISCANDO.
	
LED_D_LIGA ; LABEL QUE ESTABELECE O LOOP DO LED DIREITO, DETERMIANDO A PARTE DO PULSO QUE FICARÁ EM "HIGH".
	BSF	GPIO, GP5 ; ESTA LABEL OCORRE DE FORMA IDÊNTICA AS LABELS "ALERTA_LIGA" E "LED_E_LIGA", CONTUDO APENAS O LED DIREITO É LIGADO.
	CALL	DELAY_500MS ; É CHAMADA A ROTINA DE DELAY PARA A PERMANÊNCIA DO LED ACESO.
	GOTO	TESTE_LIGA_GP2 ; É CHAMADO O TESTE PARA VERIFICAR SE HOUVERAM REQUISIÇÕES DE OUTRAS PORTAS.
	GOTO	LED_D_DESLIGA ; CASO NÃO HAJA, O LED PODERÁ SER DESLIGASO NA PRÓXIMA LABEL.
LED_D_DESLIGA ; LABEL QUE ESTABELECE O LOOP DO LED DIREITO, DETERMIANDO A PARTE DO PULSO QUE FICARÁ EM "LOW".
	BCF	GPIO, GP5 ; OCORRE DE MANEIRA IDÊNTICA AO ALERTA_DESLIGA E AO LED_E_DESLIGA, CONTUDO APENAS O LED DIREITO SERÁ APAGADO.
	CALL	DELAY_500MS ; É CHAMADA A ROTINA DE DELAY PARA A PERMANÊNCIA DO LED ACESO.
	GOTO	TESTE_DESLIGA_GP2 ; É CHAMADO O TESTE PARA VERIFICAR SE HOUVERAM REQUISIÇÕES DE OUTRAS PORTAS.
	GOTO	LED_D_LIGA ; CASO NÃO HAJA, VOLTARÁ PARA A LABEL ANTERIOR PARA QUE O LED FIQUE PISCANDO.

;****************************************************************************************
;* PARA A FUNÇÃO DE DELAY, QUE CORRESPONDE À FREQÛENCIA SOLICITADA DE 1HZ, FOI CRIADO   *
;* UM LOOP COMPOSTO POR 4 LABELS. DESCRITO A SEGUIR. COMO A FREQUÊNCIA SOLICITADA       *
;* CORRESPONDE A 1000000US, OU SEJA, 500000US EM "HIGH" E 500000 EM "LOW", O LOOP       *
;* RERALIZA UMA CONTA APROXIMADA DESSE VALOR. O LABEL DO DELAY CONSISTE EM UM LOOP PARA *
;* A CONTAGEM DO VALOR 248 E OUTRO LOOP QUE FAZ ESSE ANTERIOR SER REPETIDO 251 VEZES    *
;* (ANTES DA REPETIÇÃO A VARIÁVEL QUE GUARDA O VALOR 248 É REINICIADA). AS REPETIÇÕES   *
;* SÃO FEITAS POR MEIO DE SUCESSIVAS SUBTRAÇÕES PARA A CONTAGEM. AS REPETIÇÕES DOS LOOPS*
;* MULTIPLICADAS PELAS INSTRUÇÕES PRESENTES EM CADA UM DELES, RESULTA EM 499997US.      *
;* COMO CADA LABEL DE LIGAR OU DESLIGAR DETERMINADO LED PASSA POR UMA VERIFICAÇÃO       * 
;* ANTES DE SER DESACIONADA, O TEMPO RESULTANTE EM QUE O LED FICARÁ ACESO OUB APAGADO   *
;* É DE 500002US.                                                                       *
;****************************************************************************************
	
DELAY_500MS ; LABEL QUE REPRESENTA O DELAY DE 500000US.			
	MOVLW	.251
	MOVWF	DELAY_2 
D_PRE
	MOVLW	.248 
	MOVWF	DELAY_1 
D_0
	NOP
	NOP
	NOP
	MOVLW	.1  
	SUBWF	DELAY_1
	BTFSS	STATUS, Z
	GOTO	D_0
	GOTO	D_1
D_1
	MOVLW	.1  
	SUBWF	DELAY_2
	BTFSS	STATUS, Z
	GOTO	D_PRE
	RETURN

;************************************************************************************
;* OS TESTES DE LIGA E DESLIGA DO GP0 VERIFICAM SE ESSA ENTRADA FOI COLOCADA EM     *
;* ZERO PELO ESTÍMULO EXTERNO, OU SE A PORTA GP0 FOI COLOCADA EM 1 PELO MESMO.      *
;* EM QUALQUER UM DESSES CASOS, O PROGRAMA SERÁ DIRECIONADO PARA UMA LABEL DE       *
;* LIMPEZA DA DO LED (OU SEJA, ESTE SERÁ APAGADO POIS O SEU BOTÃO FOI DESABILITADO).*
;************************************************************************************
	
TESTE_LIGA_GP0
	BTFSC	GPIO, GP0 ; CASO O BOTÃO GP0 NÃO TENHA SIDO DESLIGADO,
	GOTO	ALERTA_DESLIGA ; O PROGRAMA PODERÁ RETORNAR PARA A LABEL DE DESLIGAR O LED, E ASSIM ESTE CONTINUARÁ PISCANDO.
	GOTO	LIMPA_GP0 ; CASO CONTRÁRIO, OS LEDS SERÃO APAGADOS NA LABEL DE LIMPEZA E O PROGRAMA RETORNARÁ PARA A MAIN.
	
TESTE_DESLIGA_GP0 ; O MESMO CITADO ACIMA ACONTECE PARA O TESTE DO LED NA PARTE "LOW" DO PULSO.
	BTFSC	GPIO, GP0
	GOTO	ALERTA_LIGA
	GOTO	LIMPA_GP0


;********************************************************************************
;* OS TESTES DE LIGA E DESLIGA DO GP1 VERIFICAM SE ESSA ENTRADA FOI COLOCADA EM *
;* ZERO PELO ESTÍMULO EXTERNO, OU SE A PORTA GP0 FOI COLOCADA EM 1 PELO MESMO.  *
;* EM QUALQUER UM DESSES CAOS, O PROGRAMA SERÁ DIRECIONADO PARA UMA LABEL DE    *
;* LIMPEZA DOS LEDS REFERENTES À PORTA. IGUAL ÀS LABELS DE TESTE DO GP0.        *
;********************************************************************************	 	
	
TESTE_LIGA_GP1
	BTFSC	GPIO, GP1 ; CASO O BOTÃO GP1 NÃO TENHA SIDO DESLIGADO,
	GOTO	TESTE_LIGA_GP1_GP0 ; O PROGRAMA VERIFICARÁ SE O BOTÃO DO ALERTA (GPO) FOI ACIONADO.
	GOTO	LIMPA_GP1 ; CASO CONTRÁRIO, OS LEDS SERÃO APAGADOS NA LABEL DE LIMPEZA E O PROGRAMA RETORNARÁ PARA A MAIN.
TESTE_LIGA_GP1_GP0 
	BTFSC	GPIO, GP0 ; É REALIZADO O TESTE PARA VERIFICAR SE A PORTA GP0 FOI ACIONADA;
	GOTO	LIMPA_GP1 ; CASO TENHA SIDO, OS LEDS SERÃO APAGADOS NA LABEL DE LIMPEZA E O PROGRAMA RETORNARÁ PARA A MAIN, PARA QUE POSSA SER IDENTIFICADA A FLAG GERADA NA INTERRUPÇÃO POR ESSA PORTA.
	GOTO	LED_E_DESLIGA ; CASO CONTRÁRIO, O PROGRAMA PODERÁ RETORNAR PARA A LABEL DE DESLIGAR O LED, E ASSIM ESTE CONTINUARÁ PISCANDO.

	
TESTE_DESLIGA_GP1 ; O MESMO CITADO ACIMA ACONTECE PARA O TESTE DO LED NA PARTE "LOW" DO PULSO.
	BTFSC	GPIO, GP1
	GOTO	TESTE_DESLIGA_GP1_GP0
	GOTO	LIMPA_GP1
TESTE_DESLIGA_GP1_GP0
	BTFSC	GPIO, GP0
	GOTO	LIMPA_GP1
	GOTO	LED_E_LIGA

	
;********************************************************************************
;* OS TESTES DE LIGA E DESLIGA DO GP2 VERIFICAM SE ESSA ENTRADA FOI COLOCADA EM *
;* ZERO PELO ESTÍMULO EXTERNO, OU SE A PORTA GP0 FOI COLOCADA EM 1 PELO MESMO.  *
;* EM QUALQUER UM DESSES CAOS, O PROGRAMA SERÁ DIRECIONADO PARA UMA LABEL DE    *
;* LIMPEZA DOS LEDS REFERENTES À PORTA. IGUAL ÀS LABELS DE TESTE DO GP0.        *
;********************************************************************************
	
TESTE_LIGA_GP2
	BTFSC	GPIO, GP2 ; CASO O BOTÃO GP2 NÃO TENHA SIDO DESLIGADO,
	GOTO	TESTE_LIGA_GP2_GP0 ; O PROGRAMA VERIFICARÁ SE O BOTÃO DO ALERTA (GPO) FOI ACIONADO.
	GOTO	LIMPA_GP2 ; CASO CONTRÁRIO, OS LEDS SERÃO APAGADOS NA LABEL DE LIMPEZA E O PROGRAMA RETORNARÁ PARA A MAIN.
TESTE_LIGA_GP2_GP0
	BTFSC	GPIO, GP0 ; É REALIZADO O TESTE PARA VERIFICAR SE A PORTA GP0 FOI ACIONADA;
	GOTO	LIMPA_GP2 ; CASO TENHA SIDO, OS LEDS SERÃO APAGADOS NA LABEL DE LIMPEZA E O PROGRAMA RETORNARÁ PARA A MAIN, PARA QUE POSSA SER IDENTIFICADA A FLAG GERADA NA INTERRUPÇÃO POR ESSA PORTA.
	GOTO	LED_D_DESLIGA ; CASO CONTRÁRIO, O PROGRAMA PODERÁ RETORNAR PARA A LABEL DE DESLIGAR O LED, E ASSIM ESTE CONTINUARÁ PISCANDO.

TESTE_DESLIGA_GP2 ; O MESMO CITADO ACIMA ACONTECE PARA O TESTE DO LED NA PARTE "LOW" DO PULSO.
	BTFSC	GPIO, GP2
	GOTO	TESTE_DESLIGA_GP2_GP0
	GOTO	LIMPA_GP2
TESTE_DESLIGA_GP2_GP0
	BTFSC	GPIO, GP0
	GOTO	LIMPA_GP2
	GOTO	LED_D_LIGA

	
;********************************************************************************
;* QUANDO É PASSADO PELAS LABELS DE TESTE E É IDENTIFICADO QUE A PORTA ACIONADA *
;* FOI COLOCADA EM 0 OU A PORTA GP0 FOI COLOCADA EM 1, O LED CORRESPONDENTE É   *
;* APAGADO, INDICANDO QUE O BOTÃO PARA AQUELE PISCA NÃO ESTÁ MAIS ACIONADO. APÓS* 
;* A LIMPEZA DA PORTA DE SAÍDA, O PROGRAMA RETORNARÁ PARA MAIN PARA AGUARDAR QUE*
;* UMA DAS FLAGS TENHA SIDO MODIFICADA PELA INTERUPÇÃO DE ALGUMA PORTA.         *   
;********************************************************************************
	
LIMPA_GP0
	BCF	GPIO, GP4
	BCF	GPIO, GP5
	GOTO	MAIN
LIMPA_GP1
	BCF	GPIO, GP4
	GOTO	MAIN
LIMPA_GP2
	BCF	GPIO, GP5
	GOTO	MAIN

FIM


;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ESTE É O CÓDIGO CERTO.
	
	END
