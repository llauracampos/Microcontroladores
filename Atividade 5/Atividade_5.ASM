;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                      MARÇO DE 2021                              *
;*                 BASEADO NO EXEMPLO DO LIVRO                     *
;*           Desbravando o PIC. David José de Souza                *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES
		A1  ;NUMERADOR
		C1  ;CÓPIA DE A QUE FUTURAMENTE VAI GUARDAR O VALOR DO RESTO
		C2
		C3
		C4
		B1  ;CÓPIA DO VALOR DO DENOMINADOR
		D1  ;CÓPIA DO VALOR DO DENOMINADOR
		X   ;RESULTADO DA PARTE INTEIRA
		Y   ;RESULTADO DA PARTE DECIMAL
		Y2  
		DECIMAL  ;RESULTADO DA MULTIPLICAÇÃO DO RESTO POR 10
		MULTI	;RESULTADO DA MULTIPLICAÇÃO 
		MULTI2
		ADR_TEMP
		RES1
		DELAY_1
		DELAY_2
		LIGADO
		DESLIGADO
		P_10
		FLAG
		;NÃO ESQUEÇA COMENTÁRIOS ESCLARECEDORES

	ENDC			;FIM DO BLOCO DE DEFINIÇÃO DE VARIÁVEIS

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÃO ESCRITAS AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.
	
;*********************************************************************************
;* TODAS AS SUBROTINAS DESCRITAS ABAIXO, DIZEM RESPEITO À DIVISÃO COM DUAS CASAS *
;* DECIMAIS, PARA QUE SE POSSA OBTER A PORCENTAGEM DO DUTY CICLE. COMO A PORCEN- *
;* TAGEM PODE SER DESCRITA COMO (X/Y) * 100, NESTA SEÇÃO FOI FEITA A DIVISÃO DO  *
;* VALOR DIGITAL DA TENSÃO CONVERTIDA, POR 255, QUE REPRESENTA O VALOR MÁXIMO DE *
;* TENSÃO. A PARTE DECIMAL DESSE RESULTADO FOI GUARDADA EM UMA VAIRÁVEL E POSTE- *
;* RIORMENTE MULTIPLICADA POR 10, RESULTANDO NO VALOR DA PORCENTAGEM.            *
;*********************************************************************************
	

RESULTADO_DECIMAL   ;DIVIDE O RESTO DA PRIMEIRA DIVISÃO POR 25
	MOVLW	.25  ;COLOCA UMA CÓPIA DO VALOR DO DENOMINADOR DIVIDIDO POR 10, PARA QUE NÃO HAJA ESTOURO NO CARRY
	SUBWF	C1	;SUBTRAI 25 DE C1, QUE É O RESTO DA DIVISÃO
	BTFSS	STATUS, C   ;TESTA SE APÓS A SUBTRAÇÃO HOUVE UM CARRY   
	RETURN  ;SE HOUVE, RETORNA O RESULTADO
	INCF	Y   ;SOMA 1 À VARIVÁVEL DO RESULTADO DECIMAL, Y
	GOTO	RESULTADO_DECIMAL

RESULTADO_DECIMAL2   ;DIVIDE O RESTULTADO DA VSEGUNDA DIVISÃO POR 3
	MOVLW	.3  
	SUBWF	C2	;SUBTRAI O VALOR DE C2, QUE É O RESTO DA SEGUNDA DIVISÃO
	BTFSS	STATUS, C   ;TESTA SE APÓS A SUBTRAÇÃO HOUVE UM CARRY   
	RETURN	;SE HOUVE, RETORNA O RESULTADO
	INCF	Y2   ;SOMA 1 À VARIVÁVEL DO RESULTADO DECIMAL, Y2, QUE ARMAZENA A SEGUNDA CASA DECIMAL
	GOTO	RESULTADO_DECIMAL2

	
MULTIPLICA  ;MULTIPLICAÇÃO DO DENOMINADOR PELO RESULTADO DA DIVISÃO
	MOVFW B1    ;COLOCA B1 NO WORK, PARA SERVIR DE CONTADOR
	BTFSC STATUS, Z	;TESTA SE B1 É 0
	RETURN	;QUANDO B1 É 0 A FUNÇÃO É RETORNADA
	MOVFW X	;MOVE O RESULTADO DA DIVISÃO, X, PARA O WORK
	ADDWF MULTI ;SOMA X À MULTI
	DECF B1	;DECREMENTA O CONTADOR B1
	GOTO MULTIPLICA

MULTIPLICA2  ;MULTIPLICAÇÃO DO DENOMINADOR FRACIONÁRIO PELO RESULTADO DA DIVISÃO
	MOVLW B1    ;COLOCA B1 NO WORK, PARA SERVIR DE CONTADOR
	BTFSC STATUS, Z	;TESTA SE B1 É 0
	RETURN	;QUANDO B1 É 0 A FUNÇÃO É RETORNADA
	MOVFW Y	;MOVE O RESULTADO DA DIVISÃO, Y, PARA O WORK
	ADDWF MULTI2 ;SOMA Y À MULTI2
	DECF B1	;DECREMENTA O CONTADOR B1
	GOTO MULTIPLICA2
		
DIVIDE ; INICIALMENTE É REALIZADA UMA LIMPEZA DE TODAS AS VARIÁVEIS, PARA QUE NÃO HAJA ERROS NAS REPETIÇÕES DO LAÇO 
	CLRF	X   
	CLRF	Y   
	CLRF	Y2
	CLRF	DECIMAL  
	CLRF	MULTI	
	CLRF	MULTI2

DIVIDE_LOOP ;LOOP ONDE OCORRE A PRIMEIRA DIVISÃO SOLICITADA
	SUBWF	A1  ;SUBTRAI O VALOR DO DENOMINADOR, QUE ESTÁ NO WORK, DE A1
	BTFSS	STATUS, C   ;TESTA SE APÓS A SUBTRAÇÃO HOUVE UM CARRY
	GOTO	DIVIDE_MENOR	
	INCF	X   ;SOMA 1 À VARIVÁVEL DO RESULTADO INTEIRO, X
	GOTO	DIVIDE_LOOP 

DIVIDE_MENOR
	MOVWF	B1  ;TRANSFERE O VALOR DO WORK (DENOMINADOR) PARA B1
	CALL	MULTIPLICA  ;CHAMA A FUNÇÃO MULTIPLICA
	MOVFW	MULTI	;COLOCA O RESULTADO DA FUNÇÃO MULTIPLICA NO WORK
	SUBWF	C1  ;SUBTRAI MULTI DE C1, RESULTANDO NO RESTO DA DIVISÃO 
	BTFSC	STATUS, Z   ;TESTA SE O RESTO É 0
	GOTO	RESULTADO_FINAL	;VAI DIRETO PARA DIVIDE_FINAL
	CALL	RESULTADO_DECIMAL   ;CHAMA A FUNÇÃO RESULTADO_DECIMAL
	GOTO	DIVIDE_MENOR2

DIVIDE_MENOR2
	MOVLW	.25 ; ATRIBUI 25 COMO O DENOMINADOR DA SEGUNDA DIVISÃO
	MOVWF	B1  ;TRANSFERE O VALOR DO WORK (DENOMINADOR) PARA B1
	CALL	MULTIPLICA2  ;CHAMA A FUNÇÃO MULTIPLICA2
	MOVFW	MULTI2	;COLOCA O RESULTADO DA FUNÇÃO MULTIPLICA2 NO WORK
	SUBWF	C2  ;SUBTRAI MULTI DE C2, RESULTANDO NO RESTO DA SEGUNDA DIVISÃO
	BTFSC	STATUS, Z   ;TESTA SE O RESTO É 0
	GOTO	RESULTADO_FINAL1	;VAI DIRETO PARA DIVIDE_FINAL
	MOVFW	C2
	MOVWF	C4
	CALL	RESULTADO_DECIMAL2   ;CHAMA A FUNÇÃO RESULTADO_DECIMAL2
	GOTO	RESULTADO_FINAL1
	
RESULTADO_FINAL ; RESULTADO PARA O CASO DA TENSÃO CORRESPONDER A 100%, VISTO QUE OS DEMAIS RESULTADOS ´SO CONSIDERAM AS CASAS DECIMAIS
	MOVLW	.100
	MOVWF	RES1
	RETURN
	
RESULTADO_FINAL1 
	MOVLW	.10
	MOVWF	B1
	
RES_F1 ; MULTIPLICAÇÃO DO RESULTADO ENCONTRADO EM Y POR 10, RESULTANDO NA DEZENA DA PORCENTAGEM
	MOVFW B1    
	BTFSC STATUS, Z	
	GOTO RESULTADO_FINAL2	
	MOVFW Y	
	ADDWF RES1 
	DECF B1	
	GOTO RES_F1

RESULTADO_FINAL2 ; SOMA O RESULTADO ENCONTRADO EM Y2, RESULTANDO NA UNIDADE DA PORCENTAGEM
	MOVFW	Y2
	ADDWF	RES1
	GOTO	TESTE_FINAL

TESTE_FINAL ; CORREÇÃO DO CALCULO PARA VALORES FECHADOS, NECESSÁRIO DEVIDO À APROXIMAÇÃO DE 25.5 PARA 25 NA SEGUNDA DIVISÃO
	MOVLW	.5 ; A CORREÇÃO OCORRE PARA VALORES COM O SEGUNDO RESTO MENOR OU IGUAL A 5
	SUBWF	C4, W
	BTFSC	STATUS, C
	GOTO	ROTINA_FINAL_1
	GOTO	ROTINA_FINAL_2
	
ROTINA_FINAL_1 
	RETURN

ROTINA_FINAL_2 ; CASO O VALOR SEJA MENOR OU IGUAL A 5, É SUBTRAIDO 1 DO VALOR DA PORCENTAGEM
	MOVLW	.1
	SUBWF	RES1
	RETURN
	
	



;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				
	MOVLW	B'00010000' 
	MOVWF	TRISIO		
	MOVLW	B'00011000'
	MOVWF	ANSEL
	MOVLW	B'00000100'
	MOVWF	OPTION_REG	
	MOVLW	B'00000000'
	MOVWF	INTCON		
	BANK0
	MOVLW	B'00001101'
	MOVWF	ADCON0
	MOVLW	B'00000111'
	MOVWF	CMCON		

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
MAIN 
	MOVLW	B'00000000' ; É ZERADO O VALOR DO BIT ADRESH DO REGISTRADOR DE MESMO NOME, PARA QUE O PROGRAMA SEMPRE INICIE 	
	MOVWF	ADRESH ; UMA NOVA CONTAGEM COM ESSA VARIÁVEL ZERADA
	BSF	ADCON0, 1 ; INDICA QUE COMECARÁ A OCORRER UMA NOVA CONVERSÃO
	
TESTE ; LABEL UTILIZADA PARA GERAR OS CICLOS DE MÁQUINAS NECESSÁRIOS PARA TERMINAR A CONVERSÃO
	BTFSC	ADCON0, 1
	GOTO	TESTE 	

TESTE_1 ; LABEL UTILIZADA PARA TESTAR SE A CONVERSÃO FEITA É A MESMA DA ANTERIOR, PARA QUE NÃO SEJA NECESSÁRIO REPETIR OS CALCULOS DE PORCENTAGEM DO DUTY CICLE
	MOVF	ADRESH, W 
	SUBWF	ADR_TEMP, W ; VERIFICA SE O NOVO VALOR PRESENTE EM ADRESH É IGUAL AO ANTERIOR, ARMAZENADO EM UMA VARIÁVEL TEMPORÁRIA
	BTFSS	STATUS, Z
	GOTO	CALCULO_DUTY_CICLE ; CASO NÃO SEJA IGUAL, INDICA QUE É NECESSÁRIO REALIZAR O CALCULO PARA O DUTY CICLE
	GOTO	TESTE_ZERO ; CASO SEJA IGUAL, VERIFICARÁ SE O VALOR É 0V, 5V, OU QUALQUER OUTRA FRAÇÃO QUE MANTERÁ OS LEDS PISCANDO NA FREQUÊNCIA INDICADA
	
TESTE_ZERO ; TESTA SE A TENSÃO INSERIDA É 0V
	MOVLW	.0 
	SUBWF	C3, W 
	BTFSS	STATUS, Z 
	GOTO	TESTE_CINCO ; CASO NÃO SEJA, TESTA SE A TENSÃO INSERIDA É 5V
	GOTO	LED_DESLIGADO ; CASO SEJA, É ENCAMINHADO PARA A LABEL DE MANTER O LED DESLIGADO

TESTE_CINCO ; TESTA SE A TENSÃO INSERIDA É 5V
	MOVLW	.255 
	SUBWF	C3, W 
	BTFSS	STATUS, Z 
	GOTO	LED_LIGA ; CASO NÃO SEJA, COMO JÁ FOI CONFIRMADO QUE A TENSÃO INSERIDA CONTINUA SENDO IGUAL A ANTERIOR, É ENCAMINHADO DIRETO PARA A LABEL DE LIGAR O LED, NÃO SENDO NECESSÁRIO REPETIR OS CÁLCULOS
	GOTO	LED_LIGADO ; CASO SEJA, É ENCAMINHADO PARA A LABEL DE MANTER O LED LIGADO

CALCULO_DUTY_CICLE ; LABEL QUE ENCAMINHA OS VALORES OBTIDOS NA CONVERSÃO DA TENSÃO PARA A ROTINA QUE CALCULARÁ O VALOR DO DUTY CICLE
	BCF	GPIO, GP0 ; A TODO COMEÇO DE UMA NOVA TENSÃO, O LED GP0 É DESLIGADO
	CLRF	RES1 ; É LIMPA A VARIÁVEL QUE GURADARÁ O VALOR DA PORCENTAGEM DO DUTY CICLE
	MOVF	ADRESH, W
	MOVWF	A1  ;GUARDA VALOR DO NUMERADOR 
	MOVWF	C1  ;CÓPIA DE A1
	MOVWF	C2  ;CÓPIA DE A1
	MOVWF	C3  ;CÓPIA DE A1
	MOVLW	.255 ;VALOR DO DENOMINADOR 
	CALL	DIVIDE	;CHAMA A ROTINA DE DIVISÃO
	GOTO	TESTE_0

TESTE_0 ; TESTA SE A TENSÃO É 0V, CASO ELA NÃO TENHA SIDO IDENTIFICADA COMO UMA TENSÃO REPETIDA
	MOVLW	.0 
	SUBWF	C3, W 
	BTFSS	STATUS, Z 
	GOTO	TESTE_5 ; CASO NÃO SEJA, TESTA SE A TENSÃO INSERIDA É 5V
	GOTO	LED_DESLIGADO ; CASO SEJA, É ENCAMINHADO PARA A LABEL DE MANTER O LED DESLIGADO

TESTE_5 ; TESTA SE A TENSÃO É 5V, CASO ELA NÃO TENHA SIDO IDENTIFICADA COMO UMA TENSÃO REPETIDA
	MOVLW	.255 
	SUBWF	C3, W 
	BTFSS	STATUS, Z 
	GOTO	CALCULO_LIGADO ; CASO NÃO SEJA, ENCAMINHA PARA A LABEL QUE CALCULARÁ OS PERÍODOS LIGADO E DESLIGADO DO LED
	GOTO	LED_LIGADO ; CASO SEJA, É ENCAMINHADO PARA A LABEL DE MANTER O LED LIGADO

LED_DESLIGADO ; MANTÉM O LED LIGADO
	BCF	GPIO, GP0
	GOTO	TESTE_2

LED_LIGADO ; MANTÉM O LED DESLIGADO
	BSF	GPIO, GP0
	GOTO	TESTE_2

TESTE_2 ; SALVA O VALOR DA TENSÃO CONVERTIDA ATUAL, PARA COMPARAÇÃO NA PRÓXIMA REPETIÇÃO
	MOVF	ADRESH, W
	MOVWF	ADR_TEMP
	GOTO	MAIN
	
CALCULO_LIGADO ; CALCULA A QUANTIDAE DE TEMPO QUE O LED PERMANECERÁ LIGADO E DESLIGADO DE ACORDO COM O DUTY CICLE CALCULADO
	MOVLW	.200 
	MOVWF	P_10
	MOVFW	RES1 
	ADDWF	RES1, W
	SUBWF	P_10, W ; É SUBTRAIDO O VALOR DA PORCENTAGEM * 2, DE 200 (POSTERIORMENTE SERÁ MULTIPLICADO POR 10 PARA ATINGIR O PERÍODO DOLICITADO, REFERENTE A FREQUENCIA DE 500HZ)
	MOVWF	DESLIGADO 
	SUBWF	P_10, W ; POSTERIORMENTE É SUBTRAIDO O VALOR OBTIDO ACIMA DE 200, OBTENDO O PERÍODO EM Q O LED FICARÁ LIGADO E DESLIGADO
	MOVWF	LIGADO
		

LED_LIGA ; LABEL QUE ESTABELECE O LOOP DO LED, DETERMIANDO A PARTE DO PULSO QUE FICARÁ EM "HIGH".
	BSF	GPIO, GP0 ; LIGA O LED
	CALL	DELAY_LIGA ; É CHAMADA A ROTINA DE DELAY PARA A PERMANÊNCIA DO LED ACESO.
	GOTO	LED_DESLIGA ; O LED SERÁ DESLIGASO NA PRÓXIMA LABEL.
LED_DESLIGA ; LABEL QUE ESTABELECE O LOOP DO LED, DETERMIANDO A PARTE DO PULSO QUE FICARÁ EM "LOW".
	BCF	GPIO, GP0 ; DESLIGA O LED
	CALL	DELAY_DESLIGA ; É CHAMADA A ROTINA DE DELAY PARA A PERMANÊNCIA DO LED APAGADO.
	GOTO	TESTE_2 

DELAY_LIGA ; PRIMEIRO DELAY, QUE REPRESENTA A PORCENTAGEM DETERMINADA PELO DUTY CICLE PARA O LED FICAR LIGADO
	MOVFW	LIGADO ; O CALCULO DO DELAY CONSISTE EM REPETIR 10 INSTRUÇÕES PELA QUANTIDADE DETERMINADA PELO DUTY CICLE, GUARDADA NA VARIÁVEL LIGADO
	MOVWF	DELAY_1
D_L
	NOP
	NOP
	NOP
	NOP
	NOP
	MOVLW	.1  
	SUBWF	DELAY_1
	BTFSS	STATUS, Z
	GOTO	D_L
	RETURN
	
DELAY_DESLIGA ; SEGUNDO DELAY, QUE REPRESENTA A PORCENTAGEM DETERMINADA PELO DUTY CICLE PARA O LED FICAR LIGADO
	MOVFW	DESLIGADO ; O CALCULO DO DELAY CONSISTE EM REPETIR 10 INSTRUÇÕES PELA QUANTIDADE DETERMINADA PELO DUTY CICLE, GUARDADA NA VARIÁVEL DESLIGADO
	MOVWF	DELAY_2
D_D
	NOP
	NOP
	NOP
	NOP
	NOP
	MOVLW	.1  
	SUBWF	DELAY_2
	BTFSS	STATUS, Z
	GOTO	D_D
	RETURN
	 	
FIM 
	GOTO	FIM
	;CORPO DA ROTINA PRINCIPAL

	GOTO	MAIN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END
;CERTO