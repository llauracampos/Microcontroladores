;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                      MARÇO DE 2021                              *
;*                 BASEADO NO EXEMPLO DO LIVRO                     *
;*           Desbravando o PIC. David José de Souza                *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES
		CINCO_TEMP
		DEZ_TEMP
		VINTE_TEMP
		TRINTA_TEMP
		TIMER_TEMP

		;COLOQUE AQUI SUAS NOVAS VARIÁVEIS
		;NÃO ESQUEÇA COMENTÁRIOS ESCLARECEDORES

	ENDC			;FIM DO BLOCO DE DEFINIÇÃO DE VARIÁVEIS

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
	MOVLW	.25		   ; VERIFICA SE A INTERRUPÇÃO QUE OCORREU É REFERENTE A ONDA DE 5KHZ.
	SUBWF	TIMER_TEMP, W
	BTFSC	STATUS, Z
	GOTO	SAIDA_5KHZ	   ; CASO SEJA É DIRECIONADO PARA A SAÍDA REFERENTE A ESSE PULSO.
	GOTO	TESTE_10	   ; CASO CONTRÁRIO, TESTARÁ SE É REFERENTE AO PULSO DE DE 10KHZ.

TESTE_10
	MOVLW	.12		   ; VERIFICA SE A INTERRUPÇÃO QUE OCORREU É REFERENTE A ONDA DE 10KHZ.
	SUBWF	TIMER_TEMP, W
	BTFSC	STATUS, Z
	GOTO	SAIDA_10KHZ	    ; CASO SEJA É DIRECIONADO PARA A SAÍDA REFERENTE A ESSE PULSO.
	GOTO	TESTE_20	    ; CASO CONTRÁRIO, TESTARÁ SE É REFERENTE AO PULSO DE DE 20KHZ.

TESTE_20
	MOVLW	.6		    ; VERIFICA SE A INTERRUPÇÃO QUE OCORREU É REFERENTE A ONDA DE 20KHZ.
	SUBWF	TIMER_TEMP, W
	BTFSC	STATUS, Z
	GOTO	SAIDA_20KHZ	    ; CASO SEJA É DIRECIONADO PARA A SAÍDA REFERENTE A ESSE PULSO.
	GOTO	TESTE_30	    ; CASO CONTRÁRIO, TESTARÁ SE É REFERENTE AO PULSO DE DE 30KHZ.
	
TESTE_30			    ; VERIFICA SE A INTERRUPÇÃO QUE OCORREU É REFERENTE A ONDA DE 30KHZ.
	MOVLW	.4
	SUBWF	TIMER_TEMP, W
	BTFSC	STATUS, Z
	GOTO	SAIDA_30KHZ	    ; CASO SEJA É DIRECIONADO PARA A SAÍDA REFERENTE A ESSE PULSO.
	GOTO	SAI_INT		    ; CASO CONTRÁRIO, SERÁ DIRECIONADO PARA O FIM DA INTERRUPÇÃO.
	
SAIDA_5KHZ
	BSF	GPIO, GP0	    ; COLOCA GP0 EM 1 QUANDO O PULSO É DE 5KHZ.
	BCF	INTCON, T0IF
	GOTO	SAI_INT

SAIDA_10KHZ
	BSF	GPIO, GP1	    ; COLOCA GP1 EM 1 QUANDO O PULSO É DE 10KHZ.
	BCF	INTCON, T0IF
	GOTO	SAI_INT

SAIDA_20KHZ
	BSF	GPIO, GP4	    ; COLOCA GP4 EM 1 QUANDO O PULSO É DE 20KHZ.
	BCF	INTCON, T0IF
	GOTO	SAI_INT

SAIDA_30KHZ
	BSF	GPIO, GP5	    ; COLOCA GP5 EM 1 QUANDO O PULSO É DE 30KHZ.
	BCF	INTCON, T0IF
	GOTO	SAI_INT
	
; AQUI SERÃO ESCRITAS AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.

SUBROTINA1

	;CORPO DA ROTINA

	RETURN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00000100' ;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS) *GP2 É CONFIGURADO COMO ENTRADA E AS DEMAIS SAÍDAS*
	MOVWF	TRISIO		;COMO SAÍDAS
	CLRF	ANSEL 		;DEFINE PORTAS COMO Digital I/O
	MOVLW	B'00000010'	; *É DEFINIDO O PRE SCALER DE 1:8*
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO
	MOVLW	B'10100000'	; *SÃO HABILITADAS AS INTERRUPÇÕES GLOBAIS E DO TIMER 0*
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000111'
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
PRINCIPAL_5			; O PROGRAMA INICIA DIRECIONANDO PARA A ONDA DE 5KHZ.
	BCF	GPIO, GP0	; A PORTA DE SAÍDA GP0 É ZERADA PARA QUE NÃO OCORRAM ERROS.
	BCF	GPIO, GP2	
	BCF	INTCON, T0IF
	CLRF	TMR0		; TIMER 0 É ZERADO PARA QUE SEJAM CONTABILIZADOS APENAS OS CICLOS REFERENTES AO PULSO DA ONDA DE 5KHZ. 
	GOTO	DELAY_5KHZ	; DIRECIONA PARA O CALCULO DO DELAY DE 5KHZ, OU SEJA, PARA QUE SEJA CALCULADO O PERÍODO REFERENTE A ESSA FREQUÊNCIA. 
				
P_5
	MOVFW	TMR0
	MOVWF	TIMER_TEMP	; GUARDA O VALOR DA VARIÁVEL TIMER 0 EM UM AUXILIAR, PARA QUE POSSA SER UTILIZADO POSTERIORMENTE.
	MOVLW	.25		; VALOR DO TIMER 0 CONSIDERANDO O PRE SCALER DE 1:8 (200/8 = 25).
	SUBWF	TIMER_TEMP, W	; VERIFICA SE A CONTAGEM DO TIMER ZERO FOI REALIZADA DE FORMA CORRETA.
	BTFSC	STATUS, Z	
	GOTO	ESTOURO_5KHZ	; CASO TENHA SIDO, É ENCAMINHADO PARA UM ESTOURO FORÇADO DO TIMER 0, PARA QUE SEJA ENCAMINHADO PARA A INTERRUPÇÃO.
	GOTO	P_10		; CASO CONTRÁRIO, VAI VERIFICAR SE A ONDA PERTENCE AO PRÓXIMO INTERVALO DETERMINADO, DE 10KHZ.
	
ESTOURO_5KHZ			; ESTOURO FORÇADO DO TIMER 0, PARA DIRECIONAR PARA A INTERRUPÇÃO.
	MOVLW	.230		; 255 - O VALOR DA VARIÁVEL TIMER_TEMP, QUE GUARDA O RESULTADO DO TIMER 0 APÓS A CONTAGEM DO PULSO.
	MOVWF	TMR0
	MOVFW	TIMER_TEMP
	ADDWF	TMR0		; SOMA O VALOR DA DIFERNÇA (230) COM O VALOR DE TIMER_TEMP (25), PARA QUE O TIMER 0 CHEGUE A 255 E POSSA OCORRER O ESTOURO.
	BCF	INTCON, T0IF
E_5				; LOOP NECESSÁRIO PARA QUE SEJAM COMPLETADOS OS 8 CICLOS DE INSTRUÇÃO (DEVIDO AO PRE SCALER), PARA O ESTOURO DO TIMER 0.
	BTFSS	INTCON, T0IF
	GOTO	E_5		; APÓS O ESTOURO, O PROGRAMA IRÁ TRATAR A INTERRUPÇÃO.

PRINCIPAL_10			; O PROGRAMA SERÁ DIRECIONANDO PARA A ONDA DE 10KHZ.
	BCF	GPIO, GP0	; A SAÍDA GP0 VOLTA A VALER 0, PARA QUE SEJA VERIFICADO O PRÓXIMO PULSO.
	BCF	GPIO, GP1	; A PORTA DE SAÍDA GP1 É ZERADA PARA QUE NÃO OCORRAM ERROS.
	BCF	GPIO, GP2	
	BCF	INTCON, T0IF
	CLRF	TMR0		; TIMER 0 É ZERADO PARA QUE SEJAM CONTABILIZADOS APENAS OS CICLOS REFERENTES AO PULSO DA ONDA DE 10KHZ.
	GOTO	DELAY_10KHZ	; DIRECIONA PARA O CALCULO DO DELAY DE 10KHZ, OU SEJA, PARA QUE SEJA CALCULADO O PERÍODO REFERENTE A ESSA FREQUÊNCIA.
P_10
	MOVFW	TMR0		
	MOVWF	TIMER_TEMP	; GUARDA O VALOR DA VARIÁVEL TIMER 0 EM UM AUXILIAR, PARA QUE POSSA SER UTILIZADO POSTERIORMENTE.
	MOVLW	.12		; VALOR DO TIMER 0 CONSIDERANDO O PRE SCALER DE 1:8 (100/8 = 12 (INTEIRO)).
	SUBWF	TIMER_TEMP, W	; VERIFICA SE A CONTAGEM DO TIMER ZERO FOI REALIZADA DE FORMA CORRETA.
	BTFSC	STATUS, Z
	GOTO	ESTOURO_10KHZ	; CASO TENHA SIDO, É ENCAMINHADO PARA UM ESTOURO FORÇADO DO TIMER 0, PARA QUE SEJA ENCAMINHADO PARA A INTERRUPÇÃO.
	GOTO	P_20		; CASO CONTRÁRIO, VAI VERIFICAR SE A ONDA PERTENCE AO PRÓXIMO INTERVALO DETERMINADO, DE 20KHZ.

ESTOURO_10KHZ			; ESTOURO FORÇADO DO TIMER 0, PARA DIRECIONAR PARA A INTERRUPÇÃO.
	MOVLW	.243		; 255 - O VALOR DA VARIÁVEL TIMER_TEMP, QUE GUARDA O RESULTADO DO TIMER 0 APÓS A CONTAGEM DO PULSO.
	MOVWF	TMR0
	MOVFW	TIMER_TEMP
	ADDWF	TMR0		; SOMA O VALOR DA DIFERNÇA (243) COM O VALOR DE TIMER_TEMP (12), PARA QUE O TIMER 0 CHEGUE A 255 E POSSA OCORRER O ESTOURO.
	BCF	INTCON, T0IF
E_10				; LOOP NECESSÁRIO PARA QUE SEJAM COMPLETADOS OS 8 CICLOS DE INSTRUÇÃO (DEVIDO AO PRE SCALER), PARA O ESTOURO DO TIMER 0.
	BTFSS	INTCON, T0IF
	GOTO	E_10		; APÓS O ESTOURO, O PROGRAMA IRÁ TRATAR A INTERRUPÇÃO.
	
PRINCIPAL_20			; O PROGRAMA SERÁ DIRECIONANDO PARA A ONDA DE 20KHZ.
	BCF	GPIO, GP1	; A SAÍDA GP1 VOLTA A VALER 0, PARA QUE SEJA VERIFICADO O PRÓXIMO PULSO.
	BCF	GPIO, GP4	; A PORTA DE SAÍDA GP4 É ZERADA PARA QUE NÃO OCORRAM ERROS.
	BCF	GPIO, GP2
	BCF	INTCON, T0IF
	CLRF	TMR0		; TIMER 0 É ZERADO PARA QUE SEJAM CONTABILIZADOS APENAS OS CICLOS REFERENTES AO PULSO DA ONDA DE 20KHZ.
	GOTO	DELAY_20KHZ	; DIRECIONA PARA O CALCULO DO DELAY DE 20KHZ, OU SEJA, PARA QUE SEJA CALCULADO O PERÍODO REFERENTE A ESSA FREQUÊNCIA.
P_20
	MOVFW	TMR0		
	MOVWF	TIMER_TEMP	; GUARDA O VALOR DA VARIÁVEL TIMER 0 EM UM AUXILIAR, PARA QUE POSSA SER UTILIZADO POSTERIORMENTE.
	MOVLW	.6		; VALOR DO TIMER 0 CONSIDERANDO O PRE SCALER DE 1:8 (50/8 = 6 (INTEIRO)).
	SUBWF	TIMER_TEMP, W	; VERIFICA SE A CONTAGEM DO TIMER ZERO FOI REALIZADA DE FORMA CORRETA.
	BTFSC	STATUS, Z
	GOTO	ESTOURO_20KHZ	; CASO TENHA SIDO, É ENCAMINHADO PARA UM ESTOURO FORÇADO DO TIMER 0, PARA QUE SEJA ENCAMINHADO PARA A INTERRUPÇÃO.
	GOTO	P_30		; CASO CONTRÁRIO, VAI VERIFICAR SE A ONDA PERTENCE AO PRÓXIMO INTERVALO DETERMINADO, DE 30KHZ.
	
ESTOURO_20KHZ			; ESTOURO FORÇADO DO TIMER 0, PARA DIRECIONAR PARA A INTERRUPÇÃO.
	MOVLW	.249		; 255 - O VALOR DA VARIÁVEL TIMER_TEMP, QUE GUARDA O RESULTADO DO TIMER 0 APÓS A CONTAGEM DO PULSO.
	MOVWF	TMR0
	MOVFW	TIMER_TEMP
	ADDWF	TMR0		; SOMA O VALOR DA DIFERNÇA (249) COM O VALOR DE TIMER_TEMP (6), PARA QUE O TIMER 0 CHEGUE A 255 E POSSA OCORRER O ESTOURO.
	BCF	INTCON, T0IF
E_20				; LOOP NECESSÁRIO PARA QUE SEJAM COMPLETADOS OS 8 CICLOS DE INSTRUÇÃO (DEVIDO AO PRE SCALER), PARA O ESTOURO DO TIMER 0.
	BTFSS	INTCON, T0IF
	GOTO	E_20		; APÓS O ESTOURO, O PROGRAMA IRÁ TRATAR A INTERRUPÇÃO.

PRINCIPAL_30			; O PROGRAMA SERÁ DIRECIONANDO PARA A ONDA DE 30KHZ.
	BCF	GPIO, GP4	; A SAÍDA GP4 VOLTA A VALER 0, PARA QUE SEJA VERIFICADO O PRÓXIMO PULSO.
	BCF	GPIO, GP5	; A PORTA DE SAÍDA GP5 É ZERADA PARA QUE NÃO OCORRAM ERROS.
	BCF	GPIO, GP2
	BCF	INTCON, T0IF
	CLRF	TMR0		; TIMER 0 É ZERADO PARA QUE SEJAM CONTABILIZADOS APENAS OS CICLOS REFERENTES AO PULSO DA ONDA DE 30KHZ.
	GOTO	DELAY_30KHZ	; DIRECIONA PARA O CALCULO DO DELAY DE 30KHZ, OU SEJA, PARA QUE SEJA CALCULADO O PERÍODO REFERENTE A ESSA FREQUÊNCIA.
	
P_30
	MOVFW	TMR0		
	MOVWF	TIMER_TEMP	; GUARDA O VALOR DA VARIÁVEL TIMER 0 EM UM AUXILIAR, PARA QUE POSSA SER UTILIZADO POSTERIORMENTE.
	MOVLW	.4		; VALOR DO TIMER 0 CONSIDERANDO O PRE SCALER DE 1:8 (35/8 = 4 (INTEIRO)).
	SUBWF	TIMER_TEMP, W	; VERIFICA SE A CONTAGEM DO TIMER ZERO FOI REALIZADA DE FORMA CORRETA.
	BTFSC	STATUS, Z
	GOTO	ESTOURO_30KHZ	; CASO TENHA SIDO, É ENCAMINHADO PARA UM ESTOURO FORÇADO DO TIMER 0, PARA QUE SEJA ENCAMINHADO PARA A INTERRUPÇÃO.
	GOTO	FIM		; CASO CONTRÁRIO, O PROGRAMA É DIRECIONADO PARA O FIM, POIS ACABARAM OS INTERVALOS A SEREM TESTADOS.

ESTOURO_30KHZ			; ESTOURO FORÇADO DO TIMER 0, PARA DIRECIONAR PARA A INTERRUPÇÃO.
	MOVLW	.251		; 255 - O VALOR DA VARIÁVEL TIMER_TEMP, QUE GUARDA O RESULTADO DO TIMER 0 APÓS A CONTAGEM DO PULSO.
	MOVWF	TMR0
	MOVFW	TIMER_TEMP
	ADDWF	TMR0		; SOMA O VALOR DA DIFERNÇA (251) COM O VALOR DE TIMER_TEMP (4), PARA QUE O TIMER 0 CHEGUE A 255 E POSSA OCORRER O ESTOURO.
	BCF	INTCON, T0IF
E_30				; LOOP NECESSÁRIO PARA QUE SEJAM COMPLETADOS OS 8 CICLOS DE INSTRUÇÃO (DEVIDO AO PRE SCALER), PARA O ESTOURO DO TIMER 0.
	BTFSS	INTCON, T0IF
	GOTO	E_30		; APÓS O ESTOURO, O PROGRAMA IRÁ TRATAR A INTERRUPÇÃO.

FINAL
	BCF	GPIO, GP5	; ATRIBUI 0 AO GP5, POIS JÁ FORAM FINALIZADOS TODOS OS TESTES.
	GOTO	FIM
	
DELAY_5KHZ			; DELAY QUE REPRESENTA O PERÍODO CORRESPONDENTE A UM PULSO DE 5KHZ.
	MOVLW	.40		; O PERÍODO É DE 200US, COMO NA LABEL D_5 SÃO CONTADAS 5 INSTRUÇÕES, É NECESSÁRIO QUE 
	MOVWF	CINCO_TEMP	; SEJA REPETIDA 40 VEZES PARA GERAR OS 200 CICLOS DE MÁQUINA REFERENTE AO PERÍODO.
D_5				; LOOP CRIADO PARA REALIZAR A CONTAGEM DOS CICLOS DE MÁQUINA NECESSÁRIOS.
	MOVLW	.1
	SUBWF	CINCO_TEMP
	BTFSS	STATUS, Z
	GOTO	D_5
	GOTO	P_5		; QUANDO A CONTAGEM É FINALIZADA, É ENCAMINHADO PARA A LABEL P_5 PARA VERIFICAR
				; SE FOI REALIZADA A CONTAGEM CORRETA DO TIMER 0 PARA O PERÍODO DESEJADO, COM BASE NO
				; PRE SCALER, QUE NESSE CASO É DE 1:8, OU SEJA, 200/8 = 25.
	
DELAY_10KHZ			; DELAY QUE REPRESENTA O PERÍODO CORRESPONDENTE A UM PULSO DE 10KHZ.
	MOVLW	.20		; O PERÍODO É DE 100US, COMO NA LABEL D_10 SÃO CONTADAS 5 INSTRUÇÕES, É NECESSÁRIO QUE
	MOVWF	DEZ_TEMP	; SEJA REPETIDA 20 VEZES PARA GERAR OS 100 CICLOS DE MÁQUINA REFERENTE AO PERÍODO.
D_10				; LOOP CRIADO PARA REALIZAR A CONTAGEM DOS CICLOS DE MÁQUINA NECESSÁRIOS.
	MOVLW	.1
	SUBWF	DEZ_TEMP
	BTFSS	STATUS, Z
	GOTO	D_10
	GOTO	P_10		; QUANDO A CONTAGEM É FINALIZADA, É ENCAMINHADO PARA A LABEL P_10 PARA VERIFICAR
				; SE FOI REALIZADA A CONTAGEM CORRETA DO TIMER 0 PARA O PERÍODO DESEJADO, COM BASE NO
				; PRE SCALER, QUE NESSE CASO É DE 1:8, OU SEJA, 100/8 = 12 (INTEIRO).
	
DELAY_20KHZ			; DELAY QUE REPRESENTA O PERÍODO CORRESPONDENTE A UM PULSO DE 20KHZ.
	MOVLW	.10		; O PERÍODO É DE 50US, COMO NA LABEL D_20 SÃO CONTADAS 5 INSTRUÇÕES, É NECESSÁRIO QUE
	MOVWF	VINTE_TEMP	; SEJA REPETIDA 10 VEZES PARA GERAR OS 50 CICLOS DE MÁQUINA REFERENTE AO PERÍODO.
D_20				; LOOP CRIADO PARA REALIZAR A CONTAGEM DOS CICLOS DE MÁQUINA NECESSÁRIOS.
	MOVLW	.1
	SUBWF	VINTE_TEMP
	BTFSS	STATUS, Z
	GOTO	D_20
	GOTO	P_20		; QUANDO A CONTAGEM É FINALIZADA, É ENCAMINHADO PARA A LABEL P_20 PARA VERIFICAR
				; SE FOI REALIZADA A CONTAGEM CORRETA DO TIMER 0 PARA O PERÍODO DESEJADO, COM BASE NO
				; PRE SCALER, QUE NESSE CASO É DE 1:8, OU SEJA, 50/8 = 6 (INTEIRO).
	
DELAY_30KHZ			; DELAY QUE REPRESENTA O PERÍODO CORRESPONDENTE A UM PULSO DE 30KHZ.
	MOVLW	.7		; O PERÍODO É DE 33.33US, FOI ARREDONDADO PARA 35US, CONSIDERANDO OS 10% DE ERRO, COMO NA LABEL D_30 SÃO CONTADAS 
	MOVWF	TRINTA_TEMP	; 5 INSTRUÇÕES, É NECESSÁRIO QUE SEJA REPETIDA 7 VEZES PARA GERAR OS 35 CICLOS DE MÁQUINA REFERENTE AO PERÍODO.
D_30				; LOOP CRIADO PARA REALIZAR A CONTAGEM DOS CICLOS DE MÁQUINA NECESSÁRIOS.
	MOVLW	.1
	SUBWF	TRINTA_TEMP
	BTFSS	STATUS, Z
	GOTO	D_30
	GOTO	P_30		; QUANDO A CONTAGEM É FINALIZADA, É ENCAMINHADO PARA A LABEL P_30 PARA VERIFICAR
				; SE FOI REALIZADA A CONTAGEM CORRETA DO TIMER 0 PARA O PERÍODO DESEJADO, COM BASE NO
				; PRE SCALER, QUE NESSE CASO É DE 1:8, OU SEJA, 35/8 = 4 (INTEIRO). NESSE CASO TAMBÉM É
				; UTILIZADA A APROXIMAÇÃO DE 35, COM O ERRO MENOR QUE 10%.

FIM
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END
