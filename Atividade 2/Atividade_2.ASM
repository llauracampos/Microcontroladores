;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                      MARÇO DE 2021                              *
;*                 BASEADO NO EXEMPLO DO LIVRO                     *
;*           Desbravando o PIC. David José de Souza                *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES
		DD
		MM
		AA
		AUX
		DIA_AUX
		DIA_AUX2
		ANO_AUX
		ANO_AUX2
		ANO_AUX3
		ANO_AUX4
		MES_AUX
		COD_MES
		COD_ANO
		W_SAIDA
		R_BISSEXTO
		R_ANO
		R_TOTAL
		R_TOTAL_COPIA
		R_DIV
		R_AUX
		MULTI
		;COLOQUE AQUI SUAS NOVAS VARIÁVEIS
		;NÃO ESQUEÇA COMENTÁRIOS ESCLARECEDORES

	ENDC			;FIM DO BLOCO DE DEFINIÇÃO DE VARIÁVEIS

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÃO ESCRITAS AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.

TESTE_DIA
	MOVLW	.1 ; TESTE PARA SABER SE O DIA É MAIOR OU IGUAL A 1 (VÁLIDO), CASO NÃO SEJA SERÁ REDIRENCIONADO PARA A LABEL DE ERRO.
	SUBWF	DD, W
	BTFSS	STATUS, C
	GOTO	ERRO
	MOVLW	.31 ; TESTE PARA SABER SE O DIA É MENOR OU IGUAL A 31 (VÁLIDO), CASO NÃO SEJA SERÁ REDIRENCIONADO PARA A LABEL DE ERRO.
	MOVWF	AUX
	MOVFW	DD
	SUBWF	AUX, W
	BTFSS	STATUS, C
	GOTO	ERRO
	GOTO	TESTE_MES ;SE TODOS OS TESTES DO DIA DEREM CERTO, SERÁ TESTADO O MÊS.

TESTE_MES
	MOVLW	.1 ; TESTE PARA SABER SE O MÊS É MAIOR OU IGUAL A 1 (VÁLIDO), CASO NÃO SEJA SERÁ REDIRENCIONADO PARA A LABEL DE ERRO.
	SUBWF	MM, W
	BTFSS	STATUS, C
	GOTO	ERRO
	MOVLW	.12 ; TESTE PARA SABER SE O MÊS É MENOR OU IGUAL A 12 (VÁLIDO), CASO NÃO SEJA SERÁ REDIRENCIONADO PARA A LABEL DE ERRO.
	MOVWF	AUX
	MOVFW	MM
	SUBWF	AUX, W
	BTFSS	STATUS, C
	GOTO	ERRO 
	GOTO	TESTE_ANO ; SE TODOS OS TESTES DO MÊS DEREM CERTO, SERÁ TESTADO O ANO.

TESTE_ANO
	MOVLW	.30 ; TESTE PARA SABER SE O ANO É MAIOR OU IGUAL A 1930 (1930-1999)(VÁLIDO), CASO NÃO SEJA SERÁ REDIRENCIONADO PARA A LABEL DE ERRO.
	SUBWF	AA, W
	BTFSS	STATUS, C
	GOTO	TESTE_ANO_2 ; SE O ANO FOR MENOR QUE 1930, SERÃO TESTADOS OS ANOS MENORES QUE 2021.
	GOTO	TESTE_JANEIRO ; CASO CONTRÁRIO, SERÁ DIRECIONADO PARA O TESTE DE QUAL MÊS FOI DIGITADO.
	
TESTE_ANO_2
	MOVLW	.21 ; TESTE PARA SABER SE O ANO É MENOR OU IGUAL A 2021 (2000-2021)(VÁLIDO), CASO NÃO SEJA SERÁ REDIRENCIONADO PARA A LABEL DE ERRO.
	MOVWF	AUX
	MOVFW	AA
	SUBWF	AUX, W
	BTFSS	STATUS, C
	GOTO	ERRO ; CASO O ANO TAMBÉM NÃO ESTEJA DENTRO DESSE INTERVALO, SERÁ REDIRECIONADO PARA A LABEL DE ERRO.
	GOTO	TESTE_JANEIRO ; CASO CONTRÁRIO, SERÁ DIRECIONADO PARA O TESTE DE QUAL MÊS FOI DIGITADO.

TESTE_JANEIRO
	MOVLW	.1 ; É SUBTRAIDO 1 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI JANEIRO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_FEVEREIRO ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	JANEIRO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A JANEIRO.
	
;*****************************************************************************************************************
;* AS LABELS COM OS NOMES DOS MESES ATRIBUIRÁ A QUANTIDADE DE DIAS JÁ PERCORRIDOS PARA CHEGAR ATÉ O MÊS DIGITADO.*
;*                                                                                                               *
;* PARA NÃO TRABALHAR COM VALORES MAIORES QUE 255 NA OPERAÇÃO FINAL, TODOS OS VALORES SERÃO DIVIDIDOS PELO NÚMERO*
;* DE DIAS DA SEMANA, OU SEJA, 7.	                                                                         *
;*****************************************************************************************************************
	
JANEIRO
	MOVLW	.1 ; CONSIDERA O PRIMEIRO DIA DE JANEIRO.
	MOVWF	DIA_AUX 
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES	
	
TESTE_FEVEREIRO
	MOVLW	.2 ; É SUBTRAIDO 2 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI FEVEREIRO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_MARÇO ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	FEVEREIRO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A FEVEREIRO.
FEVEREIRO
	MOVLW	.32 ; CONSIDERA O PRIMEIRO DIA DE FEVEREIRO + OS DIAS DE JANEIRO.
	MOVWF	DIA_AUX
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES	

TESTE_MARÇO
	MOVLW	.3 ; É SUBTRAIDO 3 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI MARÇO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_ABRIL ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	MARÇO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A MARÇO.
MARÇO
	MOVLW	.60 ; CONSIDERA O PRIMEIRO DIA DE MARÇO + OS DIAS JANEIRO E FEVEREIRO.
	MOVWF	DIA_AUX
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES

TESTE_ABRIL
	MOVLW	.4 ; É SUBTRAIDO 4 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI ABRIL.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_MAIO ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	ABRIL ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A ABRIL.
ABRIL
	MOVLW	.91 ; CONSIDERA O PRIMEIRO DIA DE ABRIL + OS DIAS DE JANEIRO A MARÇO.
	MOVWF	DIA_AUX
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES

TESTE_MAIO
	MOVLW	.5 ; É SUBTRAÍDO 5 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI MAIO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_JUNHO ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	MAIO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A MAIO.
MAIO
	MOVLW	.121 ; CONSIDERA O PRIMEIRO DIA DE MAIO + OS DIAS DE JANEIRO A ABRIL.
	MOVWF	DIA_AUX
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES

TESTE_JUNHO
	MOVLW	.6 ; É SUBTRAÍDO 6 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI JUNHO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_JULHO ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	JUNHO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A JUNHO.
JUNHO
	MOVLW	.152 ; CONSIDERA O PRIMEIRO DIA DE JUNHO + OS DIAS DE JANEIRO A MAIO.
	MOVWF	DIA_AUX
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES

TESTE_JULHO
	MOVLW	.7 ; É SUBTRAÍDO 7 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI JULHO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_AGOSTO ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	JULHO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A JULHO.
JULHO
	MOVLW	.182  ; CONSIDERA O PRIMEIRO DIA DE JULHO + OS DIAS DE JANEIRO A JUNHO.
	MOVWF	DIA_AUX
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES

TESTE_AGOSTO
	MOVLW	.8 ; É SUBTRAÍDO 8 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI AGOSTO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_SETEMBRO ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	AGOSTO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A AGOSTO.
AGOSTO
	MOVLW	.213 ; CONSIDERA O PRIMEIRO DIA DE AGOSTO + OS DIAS DE JANEIRO A JULHO.
	MOVWF	DIA_AUX
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES

TESTE_SETEMBRO
	MOVLW	.9 ; É SUBTRAÍDO 9 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI SETEMBRO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_OUTUBRO ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	SETEMBRO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A SETEMBRO.
SETEMBRO
	MOVLW	.244 ; CONSIDERA O PRIMEIRO DIA DE SETEMBRO + OS DIAS DE JANEIRO A AGOSTO.
	MOVWF	DIA_AUX
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES

TESTE_OUTUBRO
	MOVLW	.10 ; É SUBTRAÍDO 10 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI OUTUBRO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_NOVEMBRO ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	OUTUBRO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A OUTUBRO.
OUTUBRO
	MOVLW	.29 ; PARA QUE NÃO SEJA NECESSÁRIA A UTILIZACÃO DE DOIS REGISTRADORES, É REALIZADA UMA ADAPTAÇÃO DO MÊS 
	MOVWF	DIA_AUX ; DE OUTUBRO EM DIANTE, QUE INICIA A SUA CONTAGEM EM 29 DIAS, QUE TEM RESTO 1, QUANDO DIVIDIDO POR 
	MOVWF	DIA_AUX2 ; 7 (DIAS DA SEMANA) ASSIM COMO 274, QUE SERIA O PRIMEIRO DIA DE OUTUBRO + OS DIAS DE JANEIRO A SETEMBRO.
	MOVLW	.7
	GOTO	DIVISAO_MES
	
TESTE_NOVEMBRO
	MOVLW	.11 ; É SUBTRAÍDO 11 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI NOVEMBRO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	TESTE_DEZEMBRO ; CASO NÃO SEJA, SERÁ TESTADO O PRÓXIMO MÊS.
	GOTO	NOVEMBRO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A NOVEMBRO.
NOVEMBRO
	MOVLW	.60 ; DE FORMA ANÁLOGA A OUTUBRO, É REALIZADA A ADAPTAÇÃO A NOVEMRBO, VISSTO QUE 60 TEM O RESTO EQUIVALENTE
	MOVWF	DIA_AUX ; A 305, QUE SERIA O PRIMEIRO DIA DE NOVEMBRO + OS DIAS DE JANEIRO A OUTUBRO.
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES

TESTE_DEZEMBRO
	MOVLW	.12 ; É SUBTRAÍDO 12 DO MÊS QUE FOI DIGITADO E CASO O RESULTADO SEJA ZERO, SABEREMOS QUE O MÊS DIGITADO FOI DEZEMBRO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	ERRO ; CASO NÃO TENHA SIDO NENHUM MÊS, SERÁ REDIRECIONADO PARA A LABEL DE ERRO.
	GOTO	DEZEMBRO ; CASO SEJA, IRÁ EFETUAR AS OPERAÇÕES REFERENTES A DEZEMBRO.
DEZEMBRO
	MOVLW	.90 ; ASSIM COMO EM NOVEMBRO E DEZEMBRO, O 90 TEM RESTO EQUIVALENTE A 335, QUE SERIA O PRIMEIRO DIA DE 
	MOVWF	DIA_AUX ; DEZEMBRO + OS DIAS DE JANEIRO A NOVEMBRO.
	MOVWF	DIA_AUX2
	MOVLW	.7
	GOTO	DIVISAO_MES
;************************************************************************************************************
;* QUALQUE UM DOS MESES SALVARÁ O NÚMERO DE DIAS PERCORRIDOS EM UMA VARIÁVEL QUE SERÁ DIVIDIDA POR SETE E EM* 
;* UMA CÓPIA, UTILIZADA POSTERIORMENTE.                                                                     *
;************************************************************************************************************
	
DIVISAO_MES ; LABEL ONDE OCORRE A DIVISÃO SOLICITADA
	SUBWF	DIA_AUX  ;SUBTRAI O VALOR DO DENOMINADOR, QUE ESTÁ NO WORK, DE DIA_AUX
	BTFSS	STATUS, C   ;TESTA SE APÓS A SUBTRAÇÃO HOUVE UM CARRY
	GOTO	PRE_MULTIPLICACAO_MES ; CASO HAJA IRÁ PARA A MULTIPLICAÇÃO DO RESULTADO PELO DENOMINADOR.
	INCF	MES_AUX   ;SOMA 1 À VARIVÁVEL DO RESULTADO INTEIRO, MES_AUX
	GOTO	DIVISAO_MES 

PRE_MULTIPLICACAO_MES ;LABEL ONDE SERÁ RETORNADO O VALOR 7 AO REGISTRADOR WORK PARA SEGUIR PARA A MULTIPLICAÇÃO. 
	MOVLW	.7  
	MOVWF	AUX
	GOTO	MULTIPLICACAO_MES
	
MULTIPLICACAO_MES ; LABEL QUE DESCOBRIRÁ QUAL O VALOR DA MULTIPLICAÇÃO ENTRE O DENOMINADOR E O RESULTADO DA DIVISÃO, PARA PODER CALCULAR O RESTO;
	MOVFW	AUX 
	BTFSC	STATUS, Z ;TESTA SE AUX É 0
	GOTO	RESTO_MES ; CASO SEJA, IRÁ PARA A LABEL DO RESTO DA DIVISÃO DOS DIAS PERCORRIDOS ATÉ O MÊS POR 7.
	MOVFW	MES_AUX	; COLOCA O RESULTADO DA DIVISÃO NO WORK.
	ADDWF	MULTI	; SOMA O RESULTADO A VARIAVEL MULTI.
	DECF	AUX	;DECREMENTA O CONTADOR AUX.
	GOTO	MULTIPLICACAO_MES

RESTO_MES ; LABEL QUE DEFINIRÁ QUAL O RESTO DA DIVISÃO ENTRE OS DIAS PERCORRIDOS ATÉ O MÊS E O DENOMINADOR, 7.
	MOVFW	MULTI 
	SUBWF	DIA_AUX2, W ; SUBTRAI O RESULTADO DA MULTIPLICAÇÃO FEITA PELOS DIAS PERCORRIDOS ATÉ O MÊS.
	MOVWF	COD_MES ; O VALOR OBTIDO SERÁ GUARDADO EM UMA VÁRIÁVEL QUE SE REFERE AO CÓDIGO DO MÊS.
	MOVFW	AA 
	MOVWF	ANO_AUX
	MOVLW	.4
	GOTO	DIVISAO_BISSEXTO

;****************************************************************************************************
; AS DEMAIS LABELS DE DIVISÃO, MULTIPLICAÇÃO E RESTO SEGUIRÃO O MESMO PASSO-A-PASSO DESCRITO ACIMA. *
;****************************************************************************************************
	
DIVISAO_BISSEXTO ; DIVIDE O ANO DIGITADO POR 4, PARA IDENTIFICAR SE É UM ANO BISSEXTO.
	SUBWF	ANO_AUX  
	BTFSS	STATUS, C   
	GOTO	PRE_MULTIPLICACAO_BISSEXTO	
	INCF	ANO_AUX2   
	GOTO	DIVISAO_BISSEXTO 

PRE_MULTIPLICACAO_BISSEXTO
	CLRF	MULTI
	MOVLW	.4  
	MOVWF	AUX
	GOTO	MULTIPLICACAO_BISSEXTO
	
MULTIPLICACAO_BISSEXTO ; É REALIZADA A MULTIPLICAÇÃO PARA O CÁLCULO DO RESTO DA DIVISÃO DO ANO BISSEXTO.
	MOVFW	AUX
	BTFSC	STATUS, Z	
	GOTO	RESTO_BISSEXTO
	MOVFW	ANO_AUX2	
	ADDWF	MULTI 
	DECF	AUX	
	GOTO	MULTIPLICACAO_BISSEXTO

RESTO_BISSEXTO ; CASO O RESTO DA DIVISÃO POR 4 SEJA 0, O ANO É BISEEXTO.
	MOVFW	MULTI
	SUBWF	AA, W
	MOVWF	R_BISSEXTO
	MOVLW	.0
	SUBWF	R_BISSEXTO, W
	BTFSS	STATUS, Z
	GOTO	PRE_DIVISAO_ANO1
	GOTO	SUB_BISSEXTO1
	
SUB_BISSEXTO1 ; CASO O ANO SEJA BISSEXTO, SE O MÊS DIGITADO FOR JANEIRO, É SUBTRAÍDO 1 DO CÓDIGO DO MÊS.
	MOVLW	.1 ; ISSO OCORRE PORQUE NOS ANOS BISSEXTOS É ACRESCENTADO UM DIA APENAS APÓS O FIM DE FEVEREIRO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	SUB_BISSEXTO2
	GOTO	SUB_B1

SUB_B1
	DECF	COD_MES ; AQUI OCORRE A SUBTRAÇÃO DO CÓDIGO.
	GOTO	PRE_DIVISAO_ANO1

SUB_BISSEXTO2 ; CASO O ANO SEJA BISSEXTO, SE O MÊS DIGITADO FOR FEVEREIRO, É SUBTRAÍDO 1 DO CÓDIGO DO MÊS.
	MOVLW	.2 ; ISSO OCORRE PORQUE NOS ANOS BISSEXTOS É ACRESCENTADO UM DIA APENAS APÓS O FIM DE FEVEREIRO.
	SUBWF	MM, W
	BTFSS	STATUS, Z
	GOTO	PRE_DIVISAO_ANO1
	GOTO	SUB_B2

SUB_B2
	DECF	COD_MES ; AQUI OCORRE A SUBTRAÇÃO DO CÓDIGO.
	GOTO	PRE_DIVISAO_ANO1

PRE_DIVISAO_ANO1
	MOVFW	AA
	MOVWF	ANO_AUX
	MOVLW	.4
	GOTO DIVISAO_ANO1

DIVISAO_ANO1 ; DIVISÃO DO VALOR DIGITADO PARA O ANO POR 4, PARA SABER QUANTOS ANOS BISSEXTOS EXISTIRAM ATÉ O ANO INFORMADO.
	SUBWF	ANO_AUX  ; NOS INTERVALOS DE 1930 ATÉ 1999 OU DE 2000 ATÉ 2021.
	BTFSS	STATUS, C   
	GOTO	PRE_DIVISAO_ANO2	
	INCF	ANO_AUX3   
	GOTO	DIVISAO_ANO1

PRE_DIVISAO_ANO2
	MOVFW	AA
	MOVWF	ANO_AUX
	MOVLW	.7
	GOTO DIVISAO_ANO2

DIVISAO_ANO2 ; DIVISÃO DO VALOR DIGITADO PARA O ANO POR 7, PARA REDUZIR O VALOR DO CÁLCULO FINAL E NÃO ULTRAPASSAR 255,
	SUBWF	ANO_AUX  ; ASSIM COMO FOI REALIZADO COM OS DIAS PERCORRIDOS ATÉ O MÊS DETERMINADO.
	BTFSS	STATUS, C   
	GOTO	PRE_MULTIPLICACAO_ANO	
	INCF	ANO_AUX4   
	GOTO	DIVISAO_ANO2

PRE_MULTIPLICACAO_ANO
	CLRF	MULTI
	MOVLW	.7  
	MOVWF	AUX
	GOTO	MULTIPLICACAO_ANO
	
MULTIPLICACAO_ANO ; MULTIPLICAÇÃO REALIZADA PARA DESCOBRIR O RESTO DA DIVISÃO DO ANO POR 7.
	MOVFW	AUX
	BTFSC	STATUS, Z	
	GOTO	RESTO_ANO
	MOVFW	ANO_AUX4	
	ADDWF	MULTI 
	DECF	AUX	
	GOTO	MULTIPLICACAO_ANO

RESTO_ANO ; RESTO DO ANO POR 7, PARA QUE SEJA CALCULADO UM CÓDIGO PARA O ANO.
	MOVFW	MULTI
	SUBWF	AA, W
	MOVWF	R_ANO
	GOTO	SOMA_ANO
	
SOMA_ANO ; ESTA SOMA DEFINE UM CÓDIGO PARA O ANO, QUE SERÁ IGUAL AO NÚMERO DE ANOS BISSEXTOS QUE EXISTIRAM NO
	MOVFW	ANO_AUX3 ; INTERVALO CALCULADO + O RESTO DO VALOR DO ANO REDUZIDO, OU SEJA, DIVIDIDO PELO NÚMERO 
	ADDWF	R_ANO, W ; DE DIAS DA SEMANA (7), ASSIM COMO OS DIAS DOS MESES.
	MOVWF	COD_ANO
	MOVFW	AA
	MOVLW	.22
	SUBWF	AA, W
	BTFSS	STATUS, C
	DECF	COD_ANO ; O VALOR DESSA SOMA
	GOTO	SOMA_TOTAL	

;*******************************************************************************************************************
;* A LABEL "SOMA_TOTAL" REALIZA O CALCULO DOS DIAS PERCORRIDOS ATÉ O MÊS DO ANO DETERMIDADO, CONSIDERANDO OS ANOS  *
;* BISSEXTOS. POR ISSO FORAM REALIZADOS OS CÁLCULOS PARA CÁLCULO DO CÓDIGO DO MÊS E CÓDIGO DO ANO. LOGO, ESTA LABEL*
;* SOMARÁ O DIA DIGITADO + O CÓDIGO DO MÊS + O CÓDIGO DO ANO (QUE CONSIDERA OS ANOS NORMAIS E BISSEXTOS).          *
;*******************************************************************************************************************
	
SOMA_TOTAL ; DESCRIÇÃO ACIMA.
	MOVFW	DD
	ADDWF	COD_MES, W
	MOVWF	R_TOTAL
	MOVFW	COD_ANO
	ADDWF	R_TOTAL, W
	MOVWF	R_TOTAL
	MOVWF	R_TOTAL_COPIA
	MOVLW	.7
	GOTO	DIVISAO_FINAL

DIVISAO_FINAL ; DIVISÃO DA SOMA_TOTAL (DIAS + MESES + ANOS) PELO NUMERO DE DIAS DA SEMANA (7).
	SUBWF	R_TOTAL  
	BTFSS	STATUS, C   
	GOTO	PRE_MULTIPLICACAO_FINAL	
	INCF	R_DIV   
	GOTO	DIVISAO_FINAL
	
PRE_MULTIPLICACAO_FINAL
	CLRF	MULTI
	MOVLW	.7  
	MOVWF	AUX
	GOTO	MULTIPLICACAO_FINAL
	
MULTIPLICACAO_FINAL ; MULTIPLICAÇÃO PARA O CÁLCULO DO RESTO DA DIVISÃO DA SOMA_TOTAL POR 7.
	MOVFW	AUX
	BTFSC	STATUS, Z	
	GOTO	RESTO_FINAL
	MOVFW	R_DIV	
	ADDWF	MULTI 
	DECF	AUX	
	GOTO	MULTIPLICACAO_FINAL

RESTO_FINAL ; O RESTO DA DIVISÃO DA SOMA DE DIAS + MÊSES + ANOS PERCORRIDOS, INDICARÁ O CÓDIGO DO DIA DA  
	MOVFW	MULTI ; SEMANA EM QUE A DATA DIGITADA CAI.
	SUBWF	R_TOTAL_COPIA, W
	MOVWF	W_SAIDA ; O VALOR SERÁ ATRIBUÍDO A VARIÁVEL DE SAÍDA.
	MOVLW	.0 ; TESTA SE O RESTO DA DIVISÃO FOI 0;
	SUBWF	W_SAIDA, W
	BTFSS	STATUS, Z
	RETURN ; RETORNA O RESULTADO AO CORPO PRINCIPAL DO PROGRAMA.
	GOTO	CASO_ESPECIAL 
	
	
CASO_ESPECIAL ; CASO O RESTO DA DIVISÃO SEJA ZERO (TESTADO ACIMA), SERÁ ATRIBUIDO 7 À VARIÁVEKL DE SAÍDA.
	MOVLW	.7
	MOVWF	W_SAIDA ; O VALOR SERÁ ATRIBUÍDO A VARIÁVEL DE SAÍDA.
	RETURN ; RETORNA O RESULTADO AO CORPO PRINCIPAL DO PROGRAMA.
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00000000' ;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS)
	MOVWF	TRISIO		;COMO SAÍDAS
	CLRF	ANSEL 		;DEFINE PORTAS COMO Digital I/O
	MOVLW	B'00000100'
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO
	MOVLW	B'00000000'
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000111'
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
MAIN
	MOVLW	.1 ; VALOR QUE SERÁ COLOCADO NA VARIÁVEL DIA.
	MOVWF	DD
	MOVLW	.6 ; VALOR QUE SERÁ COLOCADO NA VARIÁVEL MÊS.
	MOVWF	MM
	MOVLW	.99 ; VALOR QUE SERÁ COLOCADO NA VARIÁVEL ANO.
	MOVWF	AA
	CALL	TESTE_DIA ; CHAMA A PRIMEIRA FUNÇÃO DE TESTE DO CÓDIGGO, AS DEMAIS LABELS SERÃO SEQUENCIADAS.
	GOTO	FIM
	
	
ERRO
	MOVLW	.0 ; CASO ALGUM DOS TESTES RESULTE EM ERRO, SERÁ ATRIBUIDO 0 À VARIÁVEL W (W_SAIDA).
	MOVWF	W_SAIDA ; O VALOR SERÁ ATRIBUÍDO A VARIÁVEL DE SAÍDA.
	GOTO	FIM
	
	
FIM

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END
